{"remainingRequest":"/Users/leonard.gonsalves/aws/Flask-Scaffold/app/templates/static/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js??ref--8-1!/Users/leonard.gonsalves/aws/Flask-Scaffold/app/templates/static/node_modules/chart.js/src/platforms/platform.basic.js","dependencies":[{"path":"/Users/leonard.gonsalves/aws/Flask-Scaffold/app/templates/static/node_modules/chart.js/src/platforms/platform.basic.js","mtime":1539623761000},{"path":"/Users/leonard.gonsalves/aws/Flask-Scaffold/app/templates/static/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/Users/leonard.gonsalves/aws/Flask-Scaffold/app/templates/static/node_modules/@angular-devkit/build-optimizer/src/build-optimizer/webpack-loader.js","mtime":1528256844000}],"contextDependencies":[],"result":["/**\n * Platform fallback implementation (minimal).\n * @see https://github.com/chartjs/Chart.js/pull/4591#issuecomment-319575939\n */\n\nmodule.exports = {\n\tacquireContext: function(item) {\n\t\tif (item && item.canvas) {\n\t\t\t// Support for any object associated to a canvas (including a context2d)\n\t\t\titem = item.canvas;\n\t\t}\n\n\t\treturn item && item.getContext('2d') || null;\n\t}\n};\n",null]}